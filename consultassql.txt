-- MySQL Script generated by MySQL Workbench
-- Tue May 27 22:55:06 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema FaugetDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `FaugetDB` ;

-- -----------------------------------------------------
-- Schema FaugetDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `FaugetDB` DEFAULT CHARACTER SET utf8 ;
USE `FaugetDB` ;

-- -----------------------------------------------------
-- Table `FaugetDB`.`Administrador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Administrador` (
  `idAdmin` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `correo` VARCHAR(255) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idAdmin`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `username_UNIQUE` ON `FaugetDB`.`Administrador` (`username` ASC) VISIBLE;

CREATE UNIQUE INDEX `correo_UNIQUE` ON `FaugetDB`.`Administrador` (`correo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `idAdmin` INT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `correo` VARCHAR(255) NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `saldo` FLOAT UNSIGNED NOT NULL,
  PRIMARY KEY (`idCliente`),
  CONSTRAINT `idAdmin`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `FaugetDB`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idAdmin_idx` ON `FaugetDB`.`Cliente` (`idAdmin` ASC) VISIBLE;

CREATE UNIQUE INDEX `username_UNIQUE` ON `FaugetDB`.`Cliente` (`username` ASC) VISIBLE;

CREATE UNIQUE INDEX `correo_UNIQUE` ON `FaugetDB`.`Cliente` (`correo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Notificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Notificacion` (
  `idNotificacion` INT NOT NULL AUTO_INCREMENT,
  `idCliente` INT NOT NULL,
  `emisor` VARCHAR(45) NOT NULL,
  `mensaje` VARCHAR(255) NOT NULL,
  `fecha` DATE NOT NULL,
  PRIMARY KEY (`idNotificacion`),
  CONSTRAINT `idCliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `FaugetDB`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `cliente_id_idx` ON `FaugetDB`.`Notificacion` (`idCliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Historial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Historial` (
  `idHistorial` INT NOT NULL AUTO_INCREMENT,
  `idCliente` INT NOT NULL,
  `marcaPromo` TINYINT(1) NOT NULL,
  PRIMARY KEY (`idHistorial`),
  CONSTRAINT `cliente_id`
    FOREIGN KEY (`idCliente`)
    REFERENCES `FaugetDB`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `cliente_id_idx` ON `FaugetDB`.`Historial` (`idCliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Compra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Compra` (
  `idCompra` INT NOT NULL AUTO_INCREMENT,
  `idCliente` INT NOT NULL,
  `idHistorial` INT NOT NULL,
  `beneficiario` VARCHAR(255) NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `fecha` DATE NOT NULL,
  PRIMARY KEY (`idCompra`),
  CONSTRAINT `idCliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `FaugetDB`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idHistorial`
    FOREIGN KEY (`idHistorial`)
    REFERENCES `FaugetDB`.`Historial` (`idHistorial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idCliente_idx` ON `FaugetDB`.`Compra` (`idCliente` ASC) VISIBLE;

CREATE INDEX `idHistorial_idx` ON `FaugetDB`.`Compra` (`idHistorial` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Transaccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Transaccion` (
  `idTransaccion` INT NOT NULL,
  `idAdmin` INT NOT NULL,
  `idCliente` INT NOT NULL,
  `codRecibo` INT NOT NULL,
  `valor` FLOAT NOT NULL,
  `tipoPago` VARCHAR(45) NOT NULL,
  `tipoDoc` VARCHAR(45) NOT NULL,
  `fecha` DATE NOT NULL,
  PRIMARY KEY (`idTransaccion`),
  CONSTRAINT `idAdmin`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `FaugetDB`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idCliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `FaugetDB`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idAdmin_idx` ON `FaugetDB`.`Transaccion` (`idAdmin` ASC) VISIBLE;

CREATE INDEX `idCliente_idx` ON `FaugetDB`.`Transaccion` (`idCliente` ASC) VISIBLE;

CREATE UNIQUE INDEX `codRecibo_UNIQUE` ON `FaugetDB`.`Transaccion` (`codRecibo` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Categoria` (
  `idCategoria` INT NOT NULL AUTO_INCREMENT,
  `idAdmin` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `categoriaPadre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCategoria`),
  CONSTRAINT `idAdmin`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `FaugetDB`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idAdmin_idx` ON `FaugetDB`.`Categoria` (`idAdmin` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Promocion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Promocion` (
  `idPromocion` INT NOT NULL AUTO_INCREMENT,
  `idAdmin` INT NOT NULL,
  `porcentaje` FLOAT NOT NULL,
  `descripcion` TEXT NOT NULL,
  `fechaIncio` DATE NOT NULL,
  `fechaFin` DATE NOT NULL,
  PRIMARY KEY (`idPromocion`),
  CONSTRAINT `idAdmin`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `FaugetDB`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idAdmin_idx` ON `FaugetDB`.`Promocion` (`idAdmin` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Contenido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Contenido` (
  `idContenido` INT NOT NULL AUTO_INCREMENT,
  `idAdmin` INT NOT NULL,
  `idPromocion` INT NOT NULL,
  `idCategoria` INT NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  `descripcion` TEXT NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  `precio` FLOAT NOT NULL,
  `extension` VARCHAR(45) NOT NULL,
  `calificacion` DECIMAL(1) NOT NULL,
  `mime` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idContenido`),
  CONSTRAINT `idAdmin`
    FOREIGN KEY (`idAdmin`)
    REFERENCES `FaugetDB`.`Administrador` (`idAdmin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idPromocion`
    FOREIGN KEY (`idPromocion`)
    REFERENCES `FaugetDB`.`Promocion` (`idPromocion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idCategoria`
    FOREIGN KEY (`idCategoria`)
    REFERENCES `FaugetDB`.`Categoria` (`idCategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idPromocion_idx` ON `FaugetDB`.`Contenido` (`idPromocion` ASC) VISIBLE;

CREATE INDEX `idCategoria_idx` ON `FaugetDB`.`Contenido` (`idCategoria` ASC) VISIBLE;

CREATE INDEX `idAdmin_idx` ON `FaugetDB`.`Contenido` (`idAdmin` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`Autor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`Autor` (
  `idAutor` INT NOT NULL AUTO_INCREMENT,
  `idContenido` INT NOT NULL,
  `nombre` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idAutor`),
  CONSTRAINT `idContenido`
    FOREIGN KEY (`idContenido`)
    REFERENCES `FaugetDB`.`Contenido` (`idContenido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idContenido_idx` ON `FaugetDB`.`Autor` (`idContenido` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`PlayList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`PlayList` (
  `idPlaylist` INT NOT NULL AUTO_INCREMENT,
  `idCliente` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` TEXT NOT NULL,
  `fechaCreacion` DATE NOT NULL,
  PRIMARY KEY (`idPlaylist`),
  CONSTRAINT `idCliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `FaugetDB`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idCliente_idx` ON `FaugetDB`.`PlayList` (`idCliente` ASC) VISIBLE;

CREATE UNIQUE INDEX `nombre_UNIQUE` ON `FaugetDB`.`PlayList` (`nombre` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`ContenidoCliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`ContenidoCliente` (
  `idContenidoCliente` INT NOT NULL AUTO_INCREMENT,
  `idContenido` INT NOT NULL,
  `idCliente` INT NOT NULL,
  `cantidad` INT NOT NULL,
  PRIMARY KEY (`idContenidoCliente`),
  CONSTRAINT `idContenido`
    FOREIGN KEY (`idContenido`)
    REFERENCES `FaugetDB`.`Contenido` (`idContenido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idCliente`
    FOREIGN KEY (`idCliente`)
    REFERENCES `FaugetDB`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idContenido_idx` ON `FaugetDB`.`ContenidoCliente` (`idContenido` ASC) VISIBLE;

CREATE INDEX `idCliente_idx` ON `FaugetDB`.`ContenidoCliente` (`idCliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`PlaylistContenido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`PlaylistContenido` (
  `idPlaylistContenido` INT NOT NULL AUTO_INCREMENT,
  `idPlayList` INT NOT NULL,
  `idContenido` INT NOT NULL,
  `cantidad` INT NOT NULL,
  PRIMARY KEY (`idPlaylistContenido`),
  CONSTRAINT `idPlayList`
    FOREIGN KEY (`idPlayList`)
    REFERENCES `FaugetDB`.`PlayList` (`idPlaylist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idContenido`
    FOREIGN KEY (`idContenido`)
    REFERENCES `FaugetDB`.`Contenido` (`idContenido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idPlayList_idx` ON `FaugetDB`.`PlaylistContenido` (`idPlayList` ASC) VISIBLE;

CREATE INDEX `idContenido_idx` ON `FaugetDB`.`PlaylistContenido` (`idContenido` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `FaugetDB`.`CompraContenido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FaugetDB`.`CompraContenido` (
  `idCompraContenido` INT NOT NULL AUTO_INCREMENT,
  `idContenido` INT NOT NULL,
  `idCompra` INT NOT NULL,
  PRIMARY KEY (`idCompraContenido`),
  CONSTRAINT `idCompra`
    FOREIGN KEY (`idCompra`)
    REFERENCES `FaugetDB`.`Compra` (`idCompra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idContenido`
    FOREIGN KEY (`idContenido`)
    REFERENCES `FaugetDB`.`Contenido` (`idContenido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `idCompra_idx` ON `FaugetDB`.`CompraContenido` (`idCompra` ASC) VISIBLE;

CREATE INDEX `idContenido_idx` ON `FaugetDB`.`CompraContenido` (`idContenido` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
